VS Code installation
- material icon theme
- 
//  using npm
run the command on ur project terminal
    - npm init // to install npm in our project
    - Goto www.npmjs.com to search for list for npm u need
        E.g validator
    - npm i validator@13.7.0 //add the current version 

    argv  => means arguement vector in node js
EXPRESS JS
    visit expressjs.com
    - create a new folder call it web-server
    - npm init -y
    - npm i express --save
    - create a sub-directory, call it src    
    - create a file inside src, call it app.js
    - npm i hbs or handlebars //Express.js library template engine plugin for Handlebars for views
    - npm install nodemon

GIT
    Set up SSH keys
    - ssh-keygen
    - press another for deault route name to save on ur system
    - input ur desired password
    - Goto C: program to check newly ssh created
    - Open new with path wia ssh been saved
    - ls
    - cat id_rsa.pub
    - Copy the ssh key generated to ur github, SSH AND GPG keys, git it a name and paste the ssh key generated and save
    - ssh -T git@github.com, Press yes
    - input ur passphase
Deploy to HEROKU
    - heroku keys:add, press yes
    - heroku create mead-weather-application
    - Goto package.json file to set where heroku to pick application to deploy,
    - Edit the scripts in json object
After that goto terminal and run this command
    - npm run start
    - After goto app.js to set the environment variable of port 
    - commit your code and push to github
To deploy use this command
    - git push heroku master

MONGO DB
    - www.mongodb.com
    - click on community server, its free
    - https://www.mongodb.com/docs/drivers/ ==> To get list of drivers for Mongo DB API documentation
    - https://mongodb.github.io/node-mongodb-native/4.8/ ==> driver for node
    - Create a new project folder, call it task-manager
    - npm init -y
    - npm i mongodb
    - Use the link below for updating data in mongo db
        - https://www.mongodb.com/docs/manual/reference/operator/update/
        - https://mongoosejs.com/docs/queries.html  ===> FOR DB QUERIES
        - https://regex101.com                      ===> for reqular expressions
    - npm i bcryptjs        // to encrypt password or sensitive data
    - npm i jsonwebtoken    // to make use of jwt web token
    - npm i multer          // multi path upload of file
    - npm i sharp          // resize images and change the format
    - npm i env-cmd --save-dev       // for app to see environment variable

TESTING IN NODE JS
    Using Jest Framework
    - Goto jestjs.io
    - Goto mochajs.io
    - npm i jest --save-dev
    - Goto package.json and add jest under script
        E.g. "scripts": {
                    "start": "node src/index.js",
                    "dev": "env-cmd ./config/dev.env nodemon src/index.js",
                    "test": "jest"
                },
    - Add a new directory/folder outside src, call it tests or any name of ur choice
        - add a file inside the folder,call it math.test.js     ==> to test for our math expressions
    - npm i supertest --save-dev      // to test an express application

SHOPPING CART
    - npm install -g express generator //install express globally to make use of expresson terminal
    - express shopping-cart --hbs     // to create project using handlebars views
    - cd shopping-cart
    - npm install
    - npm start
    - localhost:3000 on your browser
    - npm install --save express-handlebars
    - Goto app.js and and add express-handlebars there, i.e
        - var expressHsb = require('express-handlebars');
    - Replace app.set('views', path.join(__dirname, 'views')); WITH
        - app.engine('.hbs', expressHbs.engine({defaultLayout: 'layout', extname: '.hbs'}));
                                        OR
        - app.engine('.hbs', expressHbs.engine({layoutsDir: 'views/layouts/', defaultLayout: 'layout', extname: '.hbs'}));
    - npm install mongoose --save
    - npm install csurf     //node js CSRF protection middleware
    - npm install --save express-session
    - npm install --save passport
    - npm install --save passport-local
    - npm install --save bcrypt-nodejs
    - npm install --save connect-flash  //for notification like toastr


SWAGGER IN NODE JS
    - npm i swagger-jsdoc swagger-ui-express -s

JOBBEE - API
    - npm init -y
    - npm i express
    - npm i express dotenv --save
    - npm i nodemon --save-dev
    - npm i mongoose --save
    - to get group of statics, run this
        db.jobs.createIndex({title: "text"}) in mongodb
    - npm i express-rate-limit --save   // to reduce the rate of accessing the endpoint at a specific period of time.
    - npm i helmet --save      //setting security HTTP headers
    - npm i express-mongo-sanitize --save       // middleware which sanitizes user-suppled data to prevent MongoDB Operator
    - npm i xss-clean --save        //middleware to sanitize user input coming from POST body, GET query and url params
    - npm i hpp --save          //middleware to protect against HTTP Parameter Pollution attacks
    - npm i cors --save         // cross origin
    